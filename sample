using System;
using System.Data;
using System.Linq;

class Program
{
    static void Main()
    {
        // Sample source DataTable
        DataTable sourceDataTable = new DataTable();
        sourceDataTable.Columns.Add("ID", typeof(int));
        sourceDataTable.Columns.Add("Name", typeof(string));
        sourceDataTable.Rows.Add(1, "John");
        sourceDataTable.Rows.Add(2, "Jane");
        sourceDataTable.Rows.Add(3, "Doe");

        // Sample target DataTable with differences
        DataTable targetDataTable = new DataTable();
        targetDataTable.Columns.Add("ID", typeof(int));
        targetDataTable.Columns.Add("Name", typeof(string));
        targetDataTable.Rows.Add(1, "John");
        targetDataTable.Rows.Add(2, "JaneUpdated"); // Difference
        targetDataTable.Rows.Add(4, "NewPerson");   // Difference

        // Specify the column to compare
        string columnNameToCompare = "ID";

        // Compare the DataTables based on the specified column
        var differences = from sourceRow in sourceDataTable.AsEnumerable()
                          join targetRow in targetDataTable.AsEnumerable()
                          on sourceRow.Field<int>(columnNameToCompare) equals targetRow.Field<int>(columnNameToCompare) into joined
                          from targetRow in joined.DefaultIfEmpty()
                          select new
                          {
                              SourceRow = sourceRow,
                              TargetRow = targetRow,
                              Difference = targetRow == null ? "Not found in target" :
                                  sourceRow.Field<string>("Name") != targetRow.Field<string>("Name") ? $"Name mismatch: {sourceRow.Field<string>("Name")} != {targetRow.Field<string>("Name")}" : null
                          };

        // Add a new column to the source DataTable to store differences
        sourceDataTable.Columns.Add("Difference", typeof(string));

        // Update the source DataTable with differences
        foreach (var diff in differences)
        {
            diff.SourceRow.SetField("Difference", diff.Difference);
        }

        // Display the updated source DataTable with differences
        Console.WriteLine("Source DataTable with Differences:");
        foreach (DataRow row in sourceDataTable.Rows)
        {
            Console.WriteLine(string.Join(", ", row.ItemArray));
        }
    }
}
