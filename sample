using System;
using System.Data;

class Program
{
    static void Main()
    {
        DataTable dataTable = CreateDataTable();

        int newHeaderRowIndex = 3; // Specify the index of the new header row (1-based index)

        MakeRowAsHeader(dataTable, newHeaderRowIndex);

        // Display the modified DataTable
        foreach (DataColumn column in dataTable.Columns)
        {
            Console.Write(column.ColumnName + "\t");
        }
        Console.WriteLine();

        foreach (DataRow row in dataTable.Rows)
        {
            foreach (var item in row.ItemArray)
            {
                Console.Write(item + "\t");
            }
            Console.WriteLine();
        }
    }

    static DataTable CreateDataTable()
    {
        DataTable dataTable = new DataTable();
        dataTable.Columns.Add("ID", typeof(int));
        dataTable.Columns.Add("Name", typeof(string));

        dataTable.Rows.Add(1, "Header1");
        dataTable.Rows.Add(2, "Header2");
        dataTable.Rows.Add(3, "John");
        dataTable.Rows.Add(4, "Jane");
        dataTable.Rows.Add(5, "Doe");

        return dataTable;
    }

    static void MakeRowAsHeader(DataTable dataTable, int newHeaderRowIndex)
    {
        if (newHeaderRowIndex < 1 || newHeaderRowIndex > dataTable.Rows.Count)
        {
            Console.WriteLine("Invalid new header row index.");
            return;
        }

        // Remove rows up to the specified row index (including header)
        for (int i = dataTable.Rows.Count - 1; i >= newHeaderRowIndex - 1; i--)
        {
            dataTable.Rows.RemoveAt(i);
        }

        // Assign values of the specified row index as column names
        DataRow newHeaderRow = dataTable.Rows[newHeaderRowIndex - 1];
        for (int i = 0; i < dataTable.Columns.Count; i++)
        {
            dataTable.Columns[i].ColumnName = newHeaderRow[i].ToString();
        }
    }
}
