2121
using System.Data;
using System.Linq;

class Program
{
    static void Main()
    {
        // Sample source DataTable
        DataTable sourceDataTable = new DataTable();
        sourceDataTable.Columns.Add("ID", typeof(int));
        sourceDataTable.Columns.Add("Name", typeof(string));
        sourceDataTable.Rows.Add(1, "John");
        sourceDataTable.Rows.Add(2, "Jane");
        sourceDataTable.Rows.Add(3, "Doe");

        // Sample target DataTable with differences
        DataTable targetDataTable = new DataTable();
        targetDataTable.Columns.Add("ID", typeof(int));
        targetDataTable.Columns.Add("Name", typeof(string));
        targetDataTable.Rows.Add(1, "John");
        targetDataTable.Rows.Add(2, "JaneUpdated"); // Difference
        targetDataTable.Rows.Add(4, "NewPerson");   // Difference

        // Create a list to store columns to be added
        var columnsToAdd = sourceDataTable.Columns.Cast<DataColumn>().Select(col => col.ColumnName).ToList();

        // Add additional column to the source DataTable for differences
        sourceDataTable.Columns.Add("Difference", typeof(string));

        // Retrieve column names dynamically excluding columns not in the table
        string[] columnsToCompare = sourceDataTable.Columns.Cast<DataColumn>()
            .Where(col => targetDataTable.Columns.Contains(col.ColumnName))
            .Select(col => col.ColumnName)
            .ToArray();

        // Iterate through each row in the source DataTable
        foreach (DataRow sourceRow in sourceDataTable.Rows)
        {
            // Find the corresponding row in the target DataTable
            DataRow targetRow = targetDataTable.AsEnumerable()
                .SingleOrDefault(row => columnsToCompare.All(col => sourceRow[col].Equals(row[col])));

            // Create a comma-separated string of differences
            string diffValue = targetRow != null
                ? string.Join(", ", columnsToCompare.Where(col => !sourceRow[col].Equals(targetRow[col])))
                : string.Empty;

            // Update the Differences column in the source DataTable
            sourceRow.SetField("Difference", diffValue);
        }

        // Display the result
        foreach (DataRow row in sourceDataTable.Rows)
        {
            Console.WriteLine($"Values: {string.Join(", ", columnsToCompare.Select(col => $"{col}: {row[col]}"))}");
            Console.WriteLine($"Difference: {row["Difference"]}");
            Console.WriteLine();
        }
    }
}
