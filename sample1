using System;
using Excel = Microsoft.Office.Interop.Excel;

class ExcelInteropExample
{
    public void ClearFilters(string filePath, string sheetName)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = excelApp.Workbooks.Open(filePath);
        Excel.Worksheet sheet = workbook.Sheets[sheetName];

        try
        {
            // Activate the sheet
            sheet.Activate();

            // Clear filters in columns H and I
            ClearColumnFilters(sheet, "H");
            ClearColumnFilters(sheet, "I");

            // Save and close workbook
            workbook.Save();
            workbook.Close();
        }
        finally
        {
            // Clean up Excel objects
            ReleaseObject(sheet);
            ReleaseObject(workbook);
            ReleaseObject(excelApp);
        }
    }

    private void ClearColumnFilters(Excel.Worksheet sheet, string columnLetter)
    {
        Excel.AutoFilter autoFilter = sheet.AutoFilter;
        if (autoFilter != null)
        {
            int columnNumber = GetColumnNumber(sheet, columnLetter);
            Excel.Filters filters = autoFilter.Filters;
            if (filters != null && filters.Item[columnNumber].On)
            {
                autoFilter.Range.AutoFilter(columnNumber, Type.Missing, Excel.XlAutoFilterOperator.xlAnd, Type.Missing, true);
            }
        }
    }

    private int GetColumnNumber(Excel.Worksheet sheet, string columnLetter)
    {
        Excel.Range cell = sheet.Cells[1, columnLetter];
        return cell.Column;
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine("Exception occurred while releasing object: " + ex.ToString());
        }
        finally
        {
            GC.Collect();
        }
    }
}
