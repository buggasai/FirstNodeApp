using System;
using Excel = Microsoft.Office.Interop.Excel;

class ExcelInteropExample
{
    public void ExtractAndAddDateToAnotherFile(string sourceFilePath, string sourceSheetName, string searchValue, string targetFilePath, string targetSheetName)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook sourceWorkbook = excelApp.Workbooks.Open(sourceFilePath);
        Excel.Worksheet sourceSheet = sourceWorkbook.Sheets[sourceSheetName];

        try
        {
            // Activate the source sheet
            sourceSheet.Activate();

            // Get the range to search in column A
            Excel.Range searchRange = sourceSheet.Columns[1]; // Column A

            // Use the Find method to locate the search value
            Excel.Range foundCell = searchRange.Find(
                What: searchValue,
                LookIn: Excel.XlFindLookIn.xlValues,
                LookAt: Excel.XlLookAt.xlWhole,
                SearchOrder: Excel.XlSearchOrder.xlByRows,
                SearchDirection: Excel.XlSearchDirection.xlNext,
                MatchCase: false,
                SearchFormat: false
            );

            // Initialize extractedDate to a default value
            DateTime extractedDate = DateTime.MinValue;

            // Check if the value was found
            if (foundCell != null)
            {
                Excel.Range cellB = sourceSheet.Cells[foundCell.Row, 2]; // Column B
                if (cellB.Value != null && DateTime.TryParse(cellB.Value.ToString(), out extractedDate))
                {
                    // Extract only the date part
                    DateTime dateOnly = extractedDate.Date;
                    Console.WriteLine($"The date for '{searchValue}' is: {dateOnly.ToShortDateString()}");

                    // Open the target workbook and sheet
                    Excel.Workbook targetWorkbook = excelApp.Workbooks.Open(targetFilePath);
                    Excel.Worksheet targetSheet = targetWorkbook.Sheets[targetSheetName];

                    // Find the last used row in column A
                    int lastRow = targetSheet.Cells[targetSheet.Rows.Count, 1].End(Excel.XlDirection.xlUp).Row + 1;

                    // Add month, year, and date to the target sheet
                    targetSheet.Cells[lastRow, 1].Value = dateOnly.Month; // Column A
                    targetSheet.Cells[lastRow, 2].Value = dateOnly.Year;  // Column B
                    targetSheet.Cells[lastRow, 3].Value = dateOnly.ToShortDateString(); // Column C

                    // Save and close the target workbook
                    targetWorkbook.Save();
                    targetWorkbook.Close();
                }
                else
                {
                    Console.WriteLine("Date value not found or invalid.");
                }
            }
            else
            {
                Console.WriteLine($"The value '{searchValue}' was not found.");
            }

            // Save and close the source workbook
            sourceWorkbook.Save();
            sourceWorkbook.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
        finally
        {
            // Clean up Excel objects
            ReleaseObject(sourceSheet);
            ReleaseObject(sourceWorkbook);
            ReleaseObject(excelApp);
        }
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine("Exception occurred while releasing object: " + ex.ToString());
        }
        finally
        {
            GC.Collect();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        ExcelInteropExample example = new ExcelInteropExample();
        example.ExtractAndAddDateToAnotherFile("path_to_your_source_excel_file.xlsx", "SourceSheetName", "edlihn ms (professional pay)", "path_to_your_target_excel_file.xlsx", "TargetSheetName");
    }
}
