using System;
using Excel = Microsoft.Office.Interop.Excel;

class ExcelInteropExample
{
    public void ClearFilters(string filePath, string sheetName)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = excelApp.Workbooks.Open(filePath);
        Excel.Worksheet sheet = workbook.Sheets[sheetName];

        try
        {
            // Activate the sheet
            sheet.Activate();

            // Clear filters in columns H and I
            ClearColumnFilter(sheet, "H");
            ClearColumnFilter(sheet, "I");

            // Save and close workbook
            workbook.Save();
            workbook.Close();
        }
        finally
        {
            // Clean up Excel objects
            ReleaseObject(sheet);
            ReleaseObject(workbook);
            ReleaseObject(excelApp);
        }
    }

    private void ClearColumnFilter(Excel.Worksheet sheet, string columnName)
    {
        int columnIndex = GetColumnIndex(sheet, columnName);
        if (columnIndex > 0)
        {
            // Check if column contains pivot table data
            bool isPivotTableColumn = IsPivotTableColumn(sheet, columnIndex);

            if (!isPivotTableColumn)
            {
                // Clear filter for the entire column
                Excel.Range headerRow = sheet.Rows[3]; // Assuming filters start from row 3
                Excel.Range columnRange = headerRow.EntireColumn;
                columnRange.AutoFilter(columnIndex, Type.Missing, Excel.XlAutoFilterOperator.xlAnd, Type.Missing, Type.Missing);
            }
            else
            {
                Console.WriteLine("Column " + columnName + " contains pivot table data. Skipping filter clear.");
            }
        }
    }

    private bool IsPivotTableColumn(Excel.Worksheet sheet, int columnIndex)
    {
        // Check if any cell in the column is within a pivot table range
        foreach (Excel.PivotTable pivotTable in sheet.PivotTables())
        {
            if (pivotTable.TableRange1.Columns.Column <= columnIndex && columnIndex <= pivotTable.TableRange1.Columns.Column + pivotTable.TableRange1.Columns.Count - 1)
            {
                return true;
            }
        }
        return false;
    }

    private int GetColumnIndex(Excel.Worksheet sheet, string columnName)
    {
        Excel.Range headerRow = sheet.Rows[3]; // Assuming filters start from row 3
        Excel.Range column = headerRow.Find(columnName, Type.Missing, Excel.XlFindLookIn.xlValues, Excel.XlLookAt.xlWhole, Excel.XlSearchOrder.xlByColumns, Excel.XlSearchDirection.xlNext, false, Type.Missing, Type.Missing);
        
        if (column != null)
        {
            return column.Column;
        }
        else
        {
            Console.WriteLine("Column " + columnName + " not found.");
            return -1;
        }
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine("Exception occurred while releasing object: " + ex.ToString());
        }
        finally
        {
            GC.Collect();
        }
    }
}
