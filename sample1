using Newtonsoft.Json.Linq; // Assuming you are using Newtonsoft.Json

// Assuming 'payload' is your parsed JObject
JObject payload = JObject.Parse(yourJsonString);

// Function to get param value for a given param name
string GetParamValue(JObject payload, string paramName)
{
    // Attempt to access the 'triggerInputs' object
    var triggerInputs = payload["triggerInputs"];
    
    if (triggerInputs != null)
    {
        // Try to access the 'tools' array
        var toolsArray = triggerInputs["tools"];
        
        if (toolsArray != null)
        {
            // Iterate through each tool in tools array
            foreach (var tool in toolsArray)
            {
                // Access the paramlist in each tool
                var paramList = tool["paramlist"];
                
                // Check if paramlist exists
                if (paramList != null)
                {
                    // Iterate through the paramlist to find the param_name
                    foreach (var param in paramList)
                    {
                        if (param["param_name"].ToString() == paramName)
                        {
                            return param["param_value"].ToString();
                        }
                    }
                }
            }
        }
        else
        {
            Console.WriteLine("'tools' is null inside triggerInputs.");
        }
    }
    else
    {
        Console.WriteLine("'triggerInputs' is null.");
    }
    
    return null; // If the param_name is not found
}

// Example usage
string paramNameToFind = "ClientName";
string paramValue = GetParamValue(payload, paramNameToFind);

if (paramValue != null)
{
    Console.WriteLine($"The value for '{paramNameToFind}' is: {paramValue}");
}
else
{
    Console.WriteLine($"The param_name '{paramNameToFind}' was not found.");
}
