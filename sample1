using FlaUI.Core.AutomationElements;
using FlaUI.UIA3;

// Assuming you have a reference to the automation element where your search starts (e.g., the main window)
var rootElement = new UIA3Automation().GetRootElement();

// Replace with the AutomationId or other unique identifier of your Group element
string groupElementId = "YourGroupElementId";

// Try finding the Group element by AutomationId first
var groupElement = rootElement.FindFirstDescendant(cf => cf.AutomationId == groupElementId);

// If not found by AutomationId, try searching using other properties (optional)
if (groupElement == null)
{
    // Replace with appropriate property values based on your UI structure
    string groupName = "YourGroupName";
    string groupClassName = "YourGroupClassName";

    groupElement = rootElement.FindFirstDescendant(cf =>
        cf.Name == groupName || cf.ClassName == groupClassName);
}

if (groupElement != null)
{
    // Text value you want to match within the Group
    string desiredText = "Your desired text";

    // Find all child Text elements within the Group
    var textElements = groupElement.FindFirstDescendants(cf => cf.ControlType == ControlType.Text);

    foreach (var textElement in textElements)
    {
        var textValue = textElement.Name; // You can also use .Text property depending on the implementation

        if (textValue == desiredText)
        {
            // Text match found! Find the sibling Edit element
            var siblingEdit = textElement.FindFirstSibling(cf => cf.ControlType == ControlType.Edit);

            if (siblingEdit != null)
            {
                var editValue = siblingEdit.Value;
                Console.WriteLine($"Edit value for '{textValue}': {editValue}");
                break;
            }
            else
            {
                Console.WriteLine($"No Edit element found for '{textValue}'");
            }
            break;
        }
    }
}
else
{
    Console.WriteLine("Group element not found!");
}
