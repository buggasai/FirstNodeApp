using System;
using Excel = Microsoft.Office.Interop.Excel;

class ExcelInteropExample
{
    public void SetValuesBasedOnCondition(string filePath, string sheetName)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = excelApp.Workbooks.Open(filePath);
        Excel.Worksheet sheet = workbook.Sheets[sheetName];

        try
        {
            // Activate the sheet
            sheet.Activate();

            // Get the used range of the sheet
            Excel.Range usedRange = sheet.UsedRange;

            // Iterate through each row in the used range
            for (int row = 2; row <= usedRange.Rows.Count; row++) // Assuming data starts from row 2
            {
                Excel.Range cellF = sheet.Cells[row, 6]; // Column F
                if (cellF.Value != null && cellF.Value.ToString().Equals("nein", StringComparison.OrdinalIgnoreCase))
                {
                    // Set values in columns D and E to 0
                    sheet.Cells[row, 4].Value = 0; // Column D
                    sheet.Cells[row, 5].Value = 0; // Column E
                }
            }

            // Save and close workbook
            workbook.Save();
            workbook.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
        finally
        {
            // Clean up Excel objects
            ReleaseObject(sheet);
            ReleaseObject(workbook);
            ReleaseObject(excelApp);
        }
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine("Exception occurred while releasing object: " + ex.ToString());
        }
        finally
        {
            GC.Collect();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        ExcelInteropExample example = new ExcelInteropExample();
        example.SetValuesBasedOnCondition("path_to_your_excel_file.xlsx", "Sheet1");
    }
}
