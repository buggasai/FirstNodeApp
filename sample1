using System;
using System.Collections.Generic;
using System.IO;
using System.Text.RegularExpressions;
using Excel = Microsoft.Office.Interop.Excel;

class Program
{
    static void Main()
    {
        // Path to the notepad file
        string notepadFilePath = "path/to/notepad.txt";

        // Path to the existing Excel file
        string excelFilePath = "path/to/excel.xlsx";

        // Read line numbers from the notepad file
        Dictionary<int, string> lineNumbers = ReadLineNumbersFromNotepad(notepadFilePath);

        // Initialize Excel application
        Excel.Application excelApp = new Excel.Application();
        excelApp.Visible = true;

        // Open existing Excel file
        Excel.Workbook workbook = excelApp.Workbooks.Open(excelFilePath);
        Excel.Worksheet worksheet = workbook.ActiveSheet;

        // Find the last column in the worksheet
        int lastColumn = worksheet.Cells.SpecialCells(Excel.XlCellType.xlCellTypeLastCell).Column;

        // Find the column index of "SlNo"
        int slNoColumnIndex = FindColumnIndex(worksheet, "SlNo");

        if (slNoColumnIndex == -1)
        {
            Console.WriteLine("Column 'SlNo' not found in the Excel sheet.");
            return;
        }

        // Insert new column at the last position
        Excel.Range range = (Excel.Range)worksheet.Cells[1, lastColumn + 1];
        range.EntireColumn.Insert(Excel.XlInsertShiftDirection.xlShiftToRight);

        // Add line numbers to the new column
        foreach (var kvp in lineNumbers)
        {
            int slNoRow = FindRowByValue(worksheet, slNoColumnIndex, kvp.Key.ToString());
            if (slNoRow != -1)
            {
                Excel.Range cell = worksheet.Cells[slNoRow, lastColumn];
                cell.Value = kvp.Value;
            }
            else
            {
                Console.WriteLine($"'SlNo' value {kvp.Key} not found in the Excel sheet.");
            }
        }

        // Save changes and close Excel
        workbook.Save();
        workbook.Close();
        excelApp.Quit();

        // Release Excel objects from memory
        System.Runtime.InteropServices.Marshal.ReleaseComObject(worksheet);
        System.Runtime.InteropServices.Marshal.ReleaseComObject(workbook);
        System.Runtime.InteropServices.Marshal.ReleaseComObject(excelApp);
    }

    static Dictionary<int, string> ReadLineNumbersFromNotepad(string filePath)
    {
        Dictionary<int, string> lineNumbers = new Dictionary<int, string>();
        try
        {
            using (StreamReader sr = new StreamReader(filePath))
            {
                string line;
                while ((line = sr.ReadLine()) != null)
                {
                    // Extract the line number using regular expression
                    Match match = Regex.Match(line, @"line no (\d+)", RegexOptions.IgnoreCase);
                    if (match.Success)
                    {
                        int lineNumber = int.Parse(match.Groups[1].Value);
                        if (lineNumbers.ContainsKey(lineNumber))
                        {
                            // Append to existing line number with comma separator
                            lineNumbers[lineNumber] += ", " + lineNumber;
                        }
                        else
                        {
                            lineNumbers[lineNumber] = lineNumber.ToString();
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error reading line numbers from notepad file: " + ex.Message);
        }
        return lineNumbers;
    }

    static int FindColumnIndex(Excel.Worksheet worksheet, string columnName)
    {
        Excel.Range headerRow = worksheet.Rows[1];
        foreach (Excel.Range cell in headerRow.Cells)
        {
            if (cell.Value != null && cell.Value.ToString().Equals(columnName, StringComparison.OrdinalIgnoreCase))
            {
                return cell.Column;
            }
        }
        return -1; // Column not found
    }

    static int FindRowByValue(Excel.Worksheet worksheet, int columnIndex, string value)
    {
        Excel.Range columnRange = worksheet.Columns[columnIndex];
        foreach (Excel.Range cell in columnRange.Cells)
        {
            if (cell.Value != null && cell.Value.ToString().Equals(value, StringComparison.OrdinalIgnoreCase))
            {
                return cell.Row;
            }
        }
        return -1; // Value not found
    }
}
