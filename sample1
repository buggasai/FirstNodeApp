using System;
using Excel = Microsoft.Office.Interop.Excel;

class ExcelInteropExample
{
    public void SetFilterOnColumnG(string filePath, string sheetName)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = excelApp.Workbooks.Open(filePath);
        Excel.Worksheet sheet = workbook.Sheets[sheetName];

        try
        {
            // Activate the sheet
            sheet.Activate();

            // Get the used range of the sheet
            Excel.Range usedRange = sheet.UsedRange;

            // Assuming the header row is row 3
            Excel.Range headerRow = sheet.Rows[3];

            // Clear any existing filters
            if (sheet.AutoFilter != null)
            {
                sheet.AutoFilterMode = false;
            }

            // Set the filter on column G (7th column)
            headerRow.AutoFilter(7, "BOB", Excel.XlAutoFilterOperator.xlFilterValues, Type.Missing, true);

            // Save and close workbook
            workbook.Save();
            workbook.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
        finally
        {
            // Clean up Excel objects
            ReleaseObject(sheet);
            ReleaseObject(workbook);
            ReleaseObject(excelApp);
        }
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine("Exception occurred while releasing object: " + ex.ToString());
        }
        finally
        {
            GC.Collect();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        ExcelInteropExample example = new ExcelInteropExample();
        example.SetFilterOnColumnG("path_to_your_excel_file.xlsx", "Sheet1");
    }
}
