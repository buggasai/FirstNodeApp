
Conversation with Gemini

Excel sorting c#,interop.excel.. header is on the 8th row, sort column B smallest to largest, sort column H smallest to largest, sort column E oldest to newest 


Show drafts

I'd be glad to help you with sorting in Excel using C# and Interop.Excel. Here's the code that incorporates the best aspects of the provided responses and addresses the specific requirements:

C#
using System;
using System.Runtime.InteropServices;
using Excel = Microsoft.Office.Interop.Excel;

namespace ExcelSorting
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                // Create an Excel application object
                Excel.Application excelApp = new Excel.Application();
                excelApp.Visible = true;

                // Open the Excel workbook
                Excel.Workbook workbook = excelApp.Workbooks.Open(@"C:\Path\To\Your\Excel\File.xlsx");

                // Get the active worksheet
                Excel.Worksheet worksheet = workbook.ActiveSheet;

                // Specify the header row (starting from 1)
                int headerRow = 8;

                // Sort column B (smallest to largest)
                worksheet.Sort.SortFields.Add(worksheet.Range[worksheet.Cells[headerRow, 2], worksheet.Cells[worksheet.UsedRange.Rows.Count, 2]]).SortOnValue.DataOption = Excel.XlSortOnValue.xlSortOnValue;
                worksheet.Sort.SortFields.Item(1).Order = Excel.XlSortOrder.xlAscending;

                // Sort column H (smallest to largest)
                worksheet.Sort.SortFields.Add(worksheet.Range[worksheet.Cells[headerRow, 8], worksheet.Cells[worksheet.UsedRange.Rows.Count, 8]]).SortOnValue.DataOption = Excel.XlSortOnValue.xlSortOnValue;
                worksheet.Sort.SortFields.Item(2).Order = Excel.XlSortOrder.xlAscending;

                // Sort column E (oldest to newest)
                worksheet.Sort.SortFields.Add(worksheet.Range[worksheet.Cells[headerRow, 5], worksheet.Cells[worksheet.UsedRange.Rows.Count, 5]]).SortOnValue.DataOption = Excel.XlSortOnValue.xlSortOnValue;
                worksheet.Sort.SortFields.Item(3).Order = Excel.XlSortOrder.xlDescending;

                // Specify the header row as the header
                worksheet.Sort.Header = Excel.XlSortHeader.xlSortHeaderRows;

                // Sort the range
                worksheet.Sort.Apply();

                // Save the workbook
                workbook.Save();

                // Quit the Excel application
                excelApp.Quit();

                Marshal.ReleaseComObject(worksheet);
                Marshal.ReleaseComObject(workbook);
                Marshal.ReleaseComObject(excelApp);
            }
            catch 1  Â  
