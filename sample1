using System;
using System.Runtime.InteropServices;
using Excel = Microsoft.Office.Interop.Excel;

class Program
{
    static void Main()
    {
        // Create a new Excel application
        Excel.Application excelApp = new Excel.Application();
        excelApp.Visible = true; // Make Excel application visible for debugging

        Excel.Workbook workbook = null;

        try
        {
            // Define the path to the workbook
            string filePath = @"C:\path\to\your\file.xlsx";

            // Open the workbook
            workbook = excelApp.Workbooks.Open(filePath);

            // Define the worksheet name
            string worksheetName = "Sheet1"; // Replace with your worksheet name

            // Access the worksheet
            Excel.Worksheet worksheet = (Excel.Worksheet)workbook.Sheets[worksheetName];

            // Get the used range of the worksheet
            Excel.Range usedRange = worksheet.UsedRange;

            // Determine the last used row
            int lastRow = usedRange.Rows.Count;

            // Get the range starting from F4 downwards
            Excel.Range formulaRange = worksheet.Range["F4:F" + lastRow];

            // Ensure the cell format is set to General before applying formulas
            formulaRange.NumberFormat = "General"; // Set to General format

            // Apply the formula dynamically
            for (int row = 4; row <= lastRow; row++)
            {
                string formula = $"=IFNA(VLOOKUP(A{row},'edlohn kunden'!A:H,8,0),\"Keine Angabe\")";
                worksheet.Cells[row, 6].Formula = formula; // Column F is the 6th column
            }

            // Force Excel to recalculate
            workbook.Application.Calculate();

            Console.WriteLine("Formulas applied to column F from row 4 downwards successfully.");

            // Save the workbook if needed
            // workbook.Save();
        }
        catch (COMException comEx)
        {
            Console.WriteLine($"COM Error: {comEx.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"General Error: {ex.Message}");
        }
        finally
        {
            // Close the workbook and quit Excel application
            if (workbook != null)
            {
                workbook.Close(false);
                Marshal.ReleaseComObject(workbook);
            }
            excelApp.Quit();
            Marshal.ReleaseComObject(excelApp);

            GC.Collect();
            GC.WaitForPendingFinalizers();
        }
    }
}
