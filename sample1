using System;
using Excel = Microsoft.Office.Interop.Excel;

class ExcelInteropExample
{
    public void ClearFilters(string filePath, string sheetName)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = excelApp.Workbooks.Open(filePath);
        Excel.Worksheet sheet = workbook.Sheets[sheetName];

        try
        {
            // Activate the sheet
            sheet.Activate();

            // Clear filters in columns H and I
            ClearColumnFilter(sheet, "H");
            ClearColumnFilter(sheet, "I");

            // Save and close workbook
            workbook.Save();
            workbook.Close();
        }
        finally
        {
            // Clean up Excel objects
            ReleaseObject(sheet);
            ReleaseObject(workbook);
            ReleaseObject(excelApp);
        }
    }

    private void ClearColumnFilter(Excel.Worksheet sheet, string columnName)
    {
        int columnIndex = GetColumnIndex(sheet, columnName);
        if (columnIndex > 0)
        {
            Excel.AutoFilter autoFilter = sheet.AutoFilter;
            if (autoFilter != null && autoFilter.Filters.Count >= columnIndex)
            {
                Excel.Filter filter = autoFilter.Filters[columnIndex];
                if (filter != null && filter.On)
                {
                    filter.Clear();
                }
            }
        }
    }

    private int GetColumnIndex(Excel.Worksheet sheet, string columnName)
    {
        Excel.Range headerRow = sheet.Rows[3]; // Assuming filters start from row 3
        Excel.Range column = headerRow.Find(columnName, Type.Missing, Excel.XlFindLookIn.xlValues, Excel.XlLookAt.xlWhole, Excel.XlSearchOrder.xlByColumns, Excel.XlSearchDirection.xlNext, false, Type.Missing, Type.Missing);
        
        if (column != null)
        {
            return column.Column;
        }
        else
        {
            Console.WriteLine("Column " + columnName + " not found.");
            return -1;
        }
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine("Exception occurred while releasing object: " + ex.ToString());
        }
        finally
        {
            GC.Collect();
        }
    }
}
