using System;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Threading;
using Excel = Microsoft.Office.Interop.Excel;

class Program
{
    static void Main()
    {
        // Set the culture to en-US
        Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");
        Thread.CurrentThread.CurrentUICulture = new CultureInfo("en-US");

        // Create a new Excel application
        Excel.Application excelApp = new Excel.Application();
        excelApp.Visible = true; // Make Excel application visible for debugging

        Excel.Workbook sourceWorkbook = null;
        Excel.Workbook destinationWorkbook = null;

        try
        {
            // Define the path to the source and destination workbooks
            string sourceFilePath = @"C:\path\to\your\source_file.xlsx";
            string destinationFilePath = @"C:\path\to\your\destination_file.xlsx";

            // Open the source workbook
            sourceWorkbook = excelApp.Workbooks.Open(sourceFilePath);

            // Define the source worksheet name
            string sourceWorksheetName = "Sheet1"; // Replace with your source worksheet name

            // Access and activate the source worksheet
            Excel.Worksheet sourceWorksheet = (Excel.Worksheet)sourceWorkbook.Sheets[sourceWorksheetName];
            sourceWorksheet.Activate();

            // Select the range A-G in the source worksheet
            Excel.Range sourceRange = sourceWorksheet.Range["A:G"];

            // Open the destination workbook
            destinationWorkbook = excelApp.Workbooks.Open(destinationFilePath);

            // Define the destination worksheet name
            string destinationWorksheetName = "Sheet1"; // Replace with your destination worksheet name

            // Access and activate the destination worksheet
            Excel.Worksheet destinationWorksheet = (Excel.Worksheet)destinationWorkbook.Sheets[destinationWorksheetName];
            destinationWorksheet.Activate();

            // Clear destination range from existing pivot tables without deleting data
            ClearPivotTableData(destinationWorksheet);

            // Select the destination range starting from A1 in the destination worksheet
            Excel.Range destinationRange = destinationWorksheet.Range["A1"];

            // Copy only values and formats from the source range to the destination range
            sourceRange.Copy(Type.Missing);
            destinationRange.PasteSpecial(Excel.XlPasteType.xlPasteValues);
            destinationRange.PasteSpecial(Excel.XlPasteType.xlPasteFormats);

            Console.WriteLine("Data copied and pasted successfully.");

            // Save the destination workbook if needed
            destinationWorkbook.Save();
        }
        catch (COMException comEx)
        {
            Console.WriteLine($"COM Error: {comEx.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"General Error: {ex.Message}");
        }
        finally
        {
            // Close the workbooks and quit Excel application
            if (sourceWorkbook != null)
            {
                sourceWorkbook.Close(false);
                Marshal.ReleaseComObject(sourceWorkbook);
            }
            if (destinationWorkbook != null)
            {
                destinationWorkbook.Close(false);
                Marshal.ReleaseComObject(destinationWorkbook);
            }
            excelApp.Quit();
            Marshal.ReleaseComObject(excelApp);

            GC.Collect();
            GC.WaitForPendingFinalizers();
        }
    }

    static void ClearPivotTableData(Excel.Worksheet worksheet)
    {
        try
        {
            Excel.PivotTables pivotTables = worksheet.PivotTables();
            int pivotTableCount = pivotTables.Count;

            for (int i = pivotTableCount; i > 0; i--)
            {
                Excel.PivotTable pivotTable = pivotTables.Item(i);
                pivotTable.TableRange2.ClearContents();
            }
        }
        catch (COMException comEx)
        {
            Console.WriteLine($"Error removing pivot tables: {comEx.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"General Error: {ex.Message}");
        }
    }
}
