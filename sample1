using System;
using System.Runtime.InteropServices;
using Excel = Microsoft.Office.Interop.Excel;

class Program
{
    static void Main(string[] args)
    {
        string filePath = @"C:\path\to\your\file.xlsx";
        string sheetName = "Sheet1"; // The sheet where the operation will be performed
        int[] valuesToDelete = { 5197, 5198, 5199 }; // The values to search for in column A

        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = null;
        Excel.Worksheet worksheet = null;

        try
        {
            // Open the workbook
            workbook = excelApp.Workbooks.Open(filePath);
            worksheet = workbook.Sheets[sheetName] as Excel.Worksheet;

            if (worksheet != null)
            {
                Excel.Range usedRange = worksheet.UsedRange;
                int lastRow = usedRange.Rows.Count;

                // Loop through the rows in column A from bottom to top to avoid skipping rows after deletion
                for (int row = lastRow; row >= 1; row--)
                {
                    Excel.Range cell = worksheet.Cells[row, 1] as Excel.Range;
                    if (cell != null && Array.Exists(valuesToDelete, value => value.ToString() == cell.Value2.ToString()))
                    {
                        ((Excel.Range)worksheet.Rows[row]).Delete();
                    }
                }

                // Save the workbook
                workbook.Save();
                Console.WriteLine("Rows containing specified values in column A have been deleted.");
            }
            else
            {
                Console.WriteLine($"Sheet '{sheetName}' not found.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
        finally
        {
            // Clean up
            if (workbook != null)
            {
                workbook.Close(false);
                Marshal.ReleaseComObject(workbook);
            }
            excelApp.Quit();
            Marshal.ReleaseComObject(excelApp);
        }
    }
}
